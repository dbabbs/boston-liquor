{"version":3,"sources":["SCENE.js","MapContainer.js","here.js","App.js","serviceWorker.js","index.js"],"names":["SCENE","cameras","camera1","type","sources","xyz_osm","url","max_zoom","_boston_alcohol","url_params","access_token","global","language","language_text_source","layers","boston_alcohol","data","source","draw","points","color","size","order","interactive","collide","places","city-points","filter","kind","kind_detail","$zoom","max","text","text_source","priority","font","family","fill","stroke","width","transform","buffer","earth","polygons","landuse","water","roads","not","lines","cap","highway","outline","minor_road","buildings","3d-buildings","min","extrude","MapContainer","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDrag","coordinates","marker","current","leafletElement","getLatLng","handleMarkerMove","lat","lng","handleClick","evt","latlng","React","createRef","state","loaded","scene","layer","inherits","createClass","key","value","_this2","setState","Tangram","leafletLayer","subscribe","load","addTo","map","tags","filterTags","ids","join","categories","config","updateConfig","console","log","_this3","react_default","a","createElement","Map","ref","center","zoom","zoomControl","onClick","markerPosition","length","Marker","position","draggable","onDragEnd","polygon","Polygon","positions","Component","hereCredentials","hereIsolineUrl","coords","range","concat","hereReverseGeocodeUrl","App","componentDidMount","fetch","then","res","json","updatePolygon","hasOwnProperty","turfPoly","response","isoline","component","shape","x","Number","split","pointsWithinPolygon","features","feature","properties","Index","updateAddressText","address","Response","View","Result","Location","Address","undefined","HouseNumber","Street","City","handleSlide","target","handleClearMarker","handleCategoryFilter","copy","slice","c","id","active","name","startCoordinates","options","mode","traffic","style","label","className","cat","i","onChange","checked","htmlFor","MapContainer_MapContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c04acc9.chunk.js","sourcesContent":["const SCENE = {\n\t\"cameras\": {\n\t\t\"camera1\": {\n\t\t\t\"type\": \"perspective\"\n\t\t}\n\t},\n\t\"sources\": {\n\t\t\"xyz_osm\": {\n\t\t\t\"type\": \"MVT\",\n\t\t\t\"url\": \"https://xyz.api.here.com/tiles/osmbase/256/all/{z}/{x}/{y}.mvt\",\n\t\t\t\"max_zoom\": 16\n\t\t},\n\t\t\"_boston_alcohol\": {\n\t\t\t\"type\": \"GeoJSON\",\n\t\t\t\"url\": \"https://xyz.api.here.com/hub/spaces/eNy2n73F/tile/web/{z}_{x}_{y}\",\n\t\t\t\"url_params\": {\n\t\t\t\t\"access_token\": \"AbuvUKANJJEZR4nb1zkEXBE\"\n\t\t\t}\n\t\t}\n\t},\n\t\"global\": {\n\t\t\"language\": \"en\",\n\t\t\"language_text_source\": \"function() {\\n    // Use preferred language label if available\\n    return (global.language && feature['name:'+global.language]) || feature.name;\\n}\\n\"\n\t},\n\t\"layers\": {\n\t\t\"boston_alcohol\": {\n\t\t\t\"data\": {\n\t\t\t\t\"source\": \"_boston_alcohol\"\n\t\t\t},\n\t\t\t\"draw\": {\n\t\t\t\t\"points\": {\n\t\t\t\t\t\"color\": \"blue\",\n\t\t\t\t\t\"size\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t13,\n\t\t\t\t\t\t\t\"7.5px\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t16,\n\t\t\t\t\t\t\t\"16px\"\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"order\": 10000,\n\t\t\t\t\t\"interactive\": true,\n\t\t\t\t\t\"collide\": false\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"places\": {\n\t\t\t\"data\": {\n\t\t\t\t\"source\": \"xyz_osm\"\n\t\t\t},\n\t\t\t\"city-points\": {\n\t\t\t\t\"filter\": {\n\t\t\t\t\t\"kind\": \"locality\",\n\t\t\t\t\t\"kind_detail\": \"city\",\n\t\t\t\t\t\"$zoom\": {\n\t\t\t\t\t\t\"max\": 18\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"draw\": {\n\t\t\t\t\t\"text\": {\n\t\t\t\t\t\t\"text_source\": \"global.language_text_source\",\n\t\t\t\t\t\t\"priority\": 10,\n\t\t\t\t\t\t\"order\": 999,\n\t\t\t\t\t\t\"font\": {\n\t\t\t\t\t\t\t\"family\": \"Roboto Mono\",\n\t\t\t\t\t\t\t\"fill\": \"#C3CDD4\",\n\t\t\t\t\t\t\t\"stroke\": {\n\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\"width\": 4\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"transform\": \"uppercase\",\n\t\t\t\t\t\t\t\"size\": [\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t4,\n\t\t\t\t\t\t\t\t\t\"15px\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t\t\t\"18px\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t12,\n\t\t\t\t\t\t\t\t\t\"26px\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"buffer\": \"2px\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"earth\": {\n\t\t\t\"data\": {\n\t\t\t\t\"source\": \"xyz_osm\"\n\t\t\t},\n\t\t\t\"draw\": {\n\t\t\t\t\"polygons\": {\n\t\t\t\t\t\"order\": \"function() { return feature.sort_rank; }\",\n\t\t\t\t\t\"color\": \"white\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"landuse\": {\n\t\t\t\"data\": {\n\t\t\t\t\"source\": \"xyz_osm\"\n\t\t\t},\n\t\t\t\"draw\": {\n\t\t\t\t\"polygons\": {\n\t\t\t\t\t\"order\": \"function() { return feature.sort_rank; }\",\n\t\t\t\t\t\"color\": \"#E9EEF1\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"water\": {\n\t\t\t\"data\": {\n\t\t\t\t\"source\": \"xyz_osm\"\n\t\t\t},\n\t\t\t\"draw\": {\n\t\t\t\t\"polygons\": {\n\t\t\t\t\t\"order\": \"function() { return feature.sort_rank; }\",\n\t\t\t\t\t\"color\": \"#C3CDD4\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"roads\": {\n\t\t\t\"data\": {\n\t\t\t\t\"source\": \"xyz_osm\"\n\t\t\t},\n\t\t\t\"filter\": {\n\t\t\t\t\"not\": {\n\t\t\t\t\t\"kind\": [\n\t\t\t\t\t\t\"path\",\n\t\t\t\t\t\t\"rail\",\n\t\t\t\t\t\t\"ferry\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"draw\": {\n\t\t\t\t\"lines\": {\n\t\t\t\t\t\"order\": \"function() { return feature.sort_rank; }\",\n\t\t\t\t\t\"color\": \"#C3CDD4\",\n\t\t\t\t\t\"width\": 8,\n\t\t\t\t\t\"cap\": \"round\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"highway\": {\n\t\t\t\t\"filter\": {\n\t\t\t\t\t\"kind\": \"highway\"\n\t\t\t\t},\n\t\t\t\t\"draw\": {\n\t\t\t\t\t\"lines\": {\n\t\t\t\t\t\t\"order\": \"function() { return feature.sort_rank; }\",\n\t\t\t\t\t\t\"color\": \"#D3DCE1\",\n\t\t\t\t\t\t\"width\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t\t\t5000\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t\t800\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t10,\n\t\t\t\t\t\t\t\t200\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t12,\n\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t14,\n\t\t\t\t\t\t\t\t40\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t18,\n\t\t\t\t\t\t\t\t20\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"outline\": {\n\t\t\t\t\t\t\t\"color\": \"#EEEEEE\",\n\t\t\t\t\t\t\t\"width\": [\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t16,\n\t\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t18,\n\t\t\t\t\t\t\t\t\t1.5\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"minor_road\": {\n\t\t\t\t\"filter\": {\n\t\t\t\t\t\"kind\": \"minor_road\"\n\t\t\t\t},\n\t\t\t\t\"draw\": {\n\t\t\t\t\t\"lines\": {\n\t\t\t\t\t\t\"order\": \"function() { return feature.sort_rank; }\",\n\t\t\t\t\t\t\"color\": \"#F8FAFB\",\n\t\t\t\t\t\t\"width\": 5\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"buildings\": {\n\t\t\t\"data\": {\n\t\t\t\t\"source\": \"xyz_osm\"\n\t\t\t},\n\t\t\t\"draw\": {\n\t\t\t\t\"polygons\": {\n\t\t\t\t\t\"order\": \"function() { return feature.sort_rank; }\",\n\t\t\t\t\t\"color\": \"#E9EBEB\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"3d-buildings\": {\n\t\t\t\t\"filter\": {\n\t\t\t\t\t\"$zoom\": {\n\t\t\t\t\t\t\"min\": 15\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"draw\": {\n\t\t\t\t\t\"polygons\": {\n\t\t\t\t\t\t\"extrude\": \"function () { return feature.height > 20 || $zoom >= 16; }\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default SCENE;\n","import React from 'react';\nimport { Map, Marker, Polygon, Popup } from 'react-leaflet';\n\nimport Tangram from 'tangram';\n\nimport SCENE from './SCENE'\n\n\nexport class MapContainer extends React.Component {\n\n   constructor(props) {\n      super(props);\n      this.marker = React.createRef();\n\n      this.state = {\n         loaded: false,\n         scene: SCENE,\n         layer: null\n      }\n   }\n\n   componentDidMount () {\n      this.setState({\n         layer: Tangram.leafletLayer({\n            scene: this.state.scene\n         })\n      }, () => {\n         this.state.layer.scene.subscribe({\n            load: (scene) => {\n               this.setState({\n                  loaded: true\n               })\n            }\n         })\n         this.state.layer.addTo(this.map.leafletElement);\n      })\n\n\n\n\n\n   }\n\n   componentDidUpdate() {\n      // console.log('new')\n      // console.log(this.state.loaded)\n      const tags = this.props.filterTags.ids.join(',') + '+' + this.props.filterTags.categories.join('+');\n      if (this.state.loaded) {\n         this.state.layer.scene.config.sources._boston_alcohol.url = 'https://xyz.api.here.com/hub/spaces/PaLBoFL4/tile/web/{z}_{x}_{y}?tags=' + tags;\n         //SCENE.sources._boston_alcohol.url = 'https://xyz.api.here.com/hub/spaces/PaLBoFL4/tile/web/{z}_{x}_{y}?tags=' + this.props.filterTags;\n         // console.log(this.state.layer.scene.config.sources._boston_alcohol.url)\n         this.state.layer.scene.updateConfig()\n         // this.state.layer.scene.load(SCENE);\n         console.log(this.state.layer.scene.config.sources._boston_alcohol.url)\n      }\n   }\n\n   handleDrag = () => {\n      const coordinates = this.marker.current.leafletElement.getLatLng();\n      this.props.handleMarkerMove([coordinates.lat, coordinates.lng]);\n   }\n\n   handleClick = (evt) => {\n      this.props.handleMarkerMove([evt.latlng.lat, evt.latlng.lng])\n   }\n\n   render() {\n      console.log(this.props.filterTags);\n      return (\n            <Map\n               ref={(ref) => { this.map = ref }}\n               center={this.props.center}\n               zoom={this.props.zoom}\n               zoomControl={false}\n               onClick={this.handleClick}\n            >\n               {\n                  this.props.markerPosition.length &&\n                  <Marker\n                     position={this.props.markerPosition}\n                     draggable={true}\n                     onDragEnd={this.handleDrag}\n                     ref={this.marker}\n                  />\n               }\n               {\n                  this.props.polygon.length &&\n                  <Polygon\n                     positions={this.props.polygon}\n                  />\n               }\n            </Map>\n      )\n   }\n}\n","export const hereCredentials = {\n   id: 'UQ75LhFcnAv0DtOUwBEA',\n   code: 'f5nyezNmYF4wvuJqQgNSkg'\n}\n\nexport const hereIsolineUrl = (coords, range) => `https://isoline.route.api.here.com/routing/7.2/calculateisoline.json?app_id=${hereCredentials.id}&app_code=${hereCredentials.code}&mode=shortest;pedestrian;traffic:disabled&start=geo!${coords[0]},${coords[1]}&range=${range * 60}&rangetype=time`\n\nexport const maxIsolineRangeLookup = {\n   time: 5000,\n   distance: 80000\n}\n\nexport const hereGeocoderUrl = (query) => `https://geocoder.api.here.com/6.2/geocode.json?app_id=${hereCredentials.id}&app_code=${hereCredentials.code}&searchtext=${query}`;\n\nexport const hereReverseGeocodeUrl = (coordinates) => `https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?prox=${coordinates[0]},${coordinates[1]},250&mode=retrieveAddresses&maxresults=1&gen=9&app_id=${hereCredentials.id}&app_code=${hereCredentials.code}`;\n","import React from 'react';\nimport './App.css';\nimport { MapContainer } from './MapContainer';\nimport { hereIsolineUrl, hereReverseGeocodeUrl } from './here';\n\nimport pointsWithinPolygon from '@turf/points-within-polygon';\nimport {polygon} from '@turf/helpers'\n\nclass App extends React.Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n\n         //Coordinates are in format [Latitude, Longitude]\n         name: 'Seattle, WA',\n         startCoordinates: [42.362451, -71.058466],\n         polygon: [],\n         markerPosition: [],\n         filterTags: '',\n         zoom: 14,\n         options: {\n\n            type: 'distance',\n            range: 1000,\n            mode: 'car',\n            traffic: 'disabled',\n            style: 'reduced.night'\n         },\n         range: 20,\n         address: '',\n         categories: [\n            {\n               label: 'All Alcohol',\n               id: 'all_alcohol',\n               active: true\n            },\n            {\n               label: 'Farmer',\n               id: 'farmer',\n               active: true\n            },\n            {\n               label: 'Malt & Wine',\n               id: 'malt_&_wine',\n               active: true\n            },\n            {\n               label: 'Malt, Wine, Liquor',\n               id: 'malt,_wine,_liquor',\n               active: true\n            },\n            {\n               label: 'Other',\n               id: 'other',\n               active: true\n            },\n            {\n               label: 'Tavern',\n               id: 'tavern',\n               active: true\n            }\n         ]\n      }\n   }\n\n\n   componentDidMount = () => {\n\n      fetch('https://xyz.api.here.com/hub/spaces/PaLBoFL4/search?access_token=AbuvUKANJJEZR4nb1zkEXBE&tags=')\n         .then(res => res.json())\n         .then(res => {\n            this.setState({\n               points: res\n            })\n         });\n   }\n\n   updatePolygon = () => {\n      fetch(hereIsolineUrl(this.state.markerPosition, this.state.range))\n      .then(res => res.json())\n      .then(res => {\n         if (res.hasOwnProperty('response')) {\n            const turfPoly = polygon([res.response.isoline[0].component[0].shape.map(x => [Number(x.split(',')[1]), Number(x.split(',')[0])])]);\n\n            const within = pointsWithinPolygon(this.state.points, turfPoly);\n\n            const tags = within.features.map(feature => feature.properties.Index);\n\n            this.setState({\n               filterTags: tags,\n               polygon: res.response.isoline[0].component[0].shape.map(x => [x.split(',')[0], x.split(',')[1]])\n            })\n         } else {\n            this.setState({\n               polygon: [],\n               filterTags: ''\n            })\n         }\n      });\n   }\n\n   updateAddressText = () => {\n      fetch(hereReverseGeocodeUrl(this.state.markerPosition))\n      .then(res => res.json())\n      .then(res => {\n         console.log(res);\n         const address = res.Response.View[0].Result[0].Location.Address;\n         console.log(address);\n         this.setState({\n            address: `${address.HouseNumber !== undefined ? address.HouseNumber : ''}  ${address.Street !== undefined ? address.Street : ''} ${address.City}`\n         })\n      })\n   }\n\n   handleMarkerMove = (coordinates) => {\n      this.setState({\n         markerPosition: coordinates\n      }, () => {\n         this.updatePolygon();\n         this.updateAddressText();\n      })\n   }\n\n   handleSlide = (evt) => {\n      this.setState({\n         range: evt.target.value\n      },() => {\n         this.updatePolygon();\n      })\n   }\n\n   handleClearMarker = () => {\n      this.setState({\n         markerPosition: [],\n      }, () => {\n         this.updatePolygon();\n      })\n   }\n\n   handleCategoryFilter = (evt) => {\n      console.log(evt.target);\n      const copy = this.state.categories.slice();\n\n      this.setState({\n         categories: copy.map(c => {\n            if (c.id === evt.target.id) {\n               c.active = !c.active;\n            }\n            return c;\n         })\n      })\n\n   }\n\n   render() {\n      return (\n         <div className=\"app\">\n            <div className=\"sidebar\">\n               <h3>Boston Liqour Licenses</h3>\n               <p>List of establishments with liqour licenses in the city of Boston, Massachusetts from 2016.</p>\n               <h4>Filter by type:</h4>\n\n               {\n                  this.state.categories.map(\n                     (cat, i) =>\n                     <div key={i}>\n                        <input onChange={this.handleCategoryFilter} type=\"checkbox\" name=\"type\" id={cat.id} checked={cat.active} />\n                        <label htmlFor={cat.id}>\n                           <div className=\"line\" id={`${cat.id}-label`}></div>\n                           {cat.label}\n                        </label>\n                     </div>\n                  )\n               }\n               <h4>Explore establishments in walking distance</h4>\n               <p>Click the map to add a draggable marker</p>\n               {\n                  this.state.markerPosition.length &&\n                  <div>\n                     <div>\n                        <input\n                           type=\"range\"\n                           value={this.state.range}\n                           min=\"1\"\n                           max=\"60\"\n                           onChange={this.handleSlide}\n                        />\n                        {this.state.range}{\" minutes\"}\n                     </div>\n                     <button\n                        onClick={this.handleClearMarker}\n                     >\n                        Clear Marker\n                     </button>\n                     <p>Within a <strong>{this.state.range}</strong> minute walk of <strong>{this.state.address}</strong>, there are <strong>{this.state.filterTags.length}</strong> establishments that serve liquor.</p>\n                  </div>\n               }\n            </div>\n            <div className=\"map-grid\">\n\n                  <MapContainer\n                     center={this.state.startCoordinates}\n                     zoom={this.state.zoom}\n                     options={this.state.options}\n                     handleMarkerMove={this.handleMarkerMove}\n                     polygon={this.state.polygon}\n                     filterTags={{\n                        ids: this.state.filterTags.length > 0 ? this.state.filterTags : [],\n                        categories: this.state.categories.filter(x => x.active).map(x => x.id)\n                     }}\n                     markerPosition={this.state.markerPosition}\n                  />\n\n\n            </div>\n         </div>\n      );\n   }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}